@model IEnumerable<InventorySystem.Models.Alert>

@{
    ViewData["Title"] = "Alerts";
}

<div class="container mt-4">
    <h1>Alerts</h1>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <span class="badge bg-secondary">@Model.Count() alerts</span>
            <span class="badge bg-danger">@Model.Count(a => !a.IsRead) unread</span>
        </div>
        <form asp-action="MarkAllAsRead" method="post">
            <button type="submit" class="btn btn-sm btn-outline-primary">Mark all as read</button>
        </form>
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            No alerts to display.
        </div>
    }
    else
    {
        <div class="list-group">
            @foreach (var alert in Model)
            {
                <div class="list-group-item @(alert.IsRead ? "bg-light" : "")" style="border-left: 5px solid @GetAlertColor(alert.Type)">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-1">
                            @if (!alert.IsRead)
                            {
                                <span class="badge bg-primary">New</span>
                            }
                            @alert.Message
                        </h5>
                        <small>@alert.CreatedAt.ToString("MMM dd, yyyy HH:mm")</small>
                    </div>
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            @if (alert.Item != null)
                            {
                                <small class="text-muted">Related to item: @alert.Item.Name</small>
                            }
                            @if (alert.TargetRole != null)
                            {
                                <small class="text-muted ml-2">For: @alert.TargetRole role</small>
                            }
                        </div>
                        @if (!alert.IsRead)
                        {
                            <form asp-action="MarkAsRead" asp-route-id="@alert.Id" method="post">
                                <button type="submit" class="btn btn-sm btn-outline-secondary">Mark as read</button>
                            </form>
                        }
                    </div>
                </div>
            }
        </div>
    }
</div>

@functions {
    public string GetAlertColor(AlertType type)
    {
        return type switch
        {
            AlertType.Info => "#0d6efd",  // blue
            AlertType.Warning => "#ffc107", // yellow
            AlertType.Danger => "#dc3545", // red
            AlertType.Success => "#198754", // green
            _ => "#6c757d"  // grey (default)
        };
    }
}
