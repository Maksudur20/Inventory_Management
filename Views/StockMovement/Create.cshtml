@model InventorySystem.Models.StockMovement

@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Create Stock Movement";
    var items = ViewBag.Items as List<SelectListItem> ?? new List<SelectListItem>();
}

<div class="card shadow mb-4">
    <div class="card-header bg-primary text-white">
        <h1 class="h3 mb-0">Create Stock Movement</h1>
    </div>
    <div class="card-body">
        @if (TempData["Error"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bi bi-exclamation-triangle-fill me-2"></i>
                @TempData["Error"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }


        <div class="row">
            <div class="col-md-8">
                <form asp-action="Create" method="post" id="stockMovementForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group mb-3">
                        <label asp-for="ItemId" class="form-label fw-bold">Item <span class="text-danger">*</span></label>
                        @if (items == null || !items.Any())
                        {
                            <div class="alert alert-warning">
                                <i class="bi bi-exclamation-triangle me-2"></i>
                                No items available. Please add items before creating a stock movement.
                                <a asp-controller="Inventory" asp-action="Create" class="alert-link">Add item now</a>
                            </div>
                        }
                        else 
                        {
                            <select id="ItemId" name="ItemId" class="form-select" required>
                                <option value="">-- Select Item --</option>
                                @foreach (var item in items)
                                {
                                    <option value="@item.Value">@item.Text</option>
                                }
                            </select>
                        }
                        <span asp-validation-for="ItemId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Type" class="form-label fw-bold">Movement Type <span class="text-danger">*</span></label>
                        <select asp-for="Type" class="form-select" asp-items="Html.GetEnumSelectList<MovementType>()" required>
                            <option value="">-- Select Type --</option>
                        </select>
                        <span asp-validation-for="Type" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Quantity" class="form-label fw-bold">Quantity <span class="text-danger">*</span></label>
                        <input asp-for="Quantity" class="form-control" type="number" min="1" required />
                        <span asp-validation-for="Quantity" class="text-danger"></span>
                        <div class="form-text">Enter the quantity to add (In), remove (Out), or set to (Adjustment)</div>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Notes" class="form-label fw-bold">Notes</label>
                        <textarea asp-for="Notes" class="form-control" rows="3" placeholder="Optional notes about this stock movement"></textarea>
                        <span asp-validation-for="Notes" class="text-danger"></span>
                    </div>

                    <div class="form-group mt-4 d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="bi bi-plus-circle me-1"></i> Create Movement
                        </button>
                        <a asp-action="Index" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left me-1"></i> Back to List
                        </a>
                    </div>
                </form>
            </div>
            <div class="col-md-4">
                <div class="card border-info">
                    <div class="card-header bg-info text-white">Help Information</div>
                    <div class="card-body">
                        <h5 class="card-title">About Stock Movements</h5>
                        <p class="card-text">Stock movements track inventory changes:</p>
                        <ul>
                            <li><strong>In</strong> - Add stock to inventory</li>
                            <li><strong>Out</strong> - Remove stock from inventory</li>
                            <li><strong>Adjustment</strong> - Set stock to exact quantity</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Client-side validation enhancement
        $(document).ready(function() {
            // Clear any error messages when the form loads
            $('.text-danger').text('');
            $('.alert-danger').hide();
            
            $('#stockMovementForm').on('submit', function(e) {
                // Reset validation state
                $('.text-danger').text('');
                let isValid = true;
                
                // Validate Item selection
                const itemId = $('#ItemId').val();
                if (!itemId || itemId <= 0) {
                    e.preventDefault();
                    $('#ItemId').next('.text-danger').text('Please select an item');
                    isValid = false;
                }
                
                // Validate Movement Type
                const type = $('#Type').val();
                if (!type) {
                    e.preventDefault();
                    $('#Type').next('.text-danger').text('Please select a movement type');
                    isValid = false;
                }
                
                // Validate Quantity
                const quantity = $('#Quantity').val();
                if (!quantity || quantity < 1) {
                    e.preventDefault();
                    $('#Quantity').next('.text-danger').text('Please enter a valid quantity (minimum 1)');
                    isValid = false;
                }
                
                if (!isValid) {
                    // Focus on the first invalid field
                    $('select, input').each(function() {
                        if ($(this).next('.text-danger').text() !== '') {
                            $(this).focus();
                            return false;
                        }
                    });
                }
                
                return isValid;
            });
            
            // Clear validation errors when field changes
            $('select, input, textarea').on('change', function() {
                $(this).next('.text-danger').text('');
            });
        });
    </script>
}